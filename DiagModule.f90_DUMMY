!-*- mode: F90; mode: font-lock; column-number-mode: true; vc-back-end: CVS -*-
! -----------------------------------------------------------------------------
! $Id: DiagModule.dummy.f90,v 1.1 2002/06/25 10:52:10 drb Exp $
! -----------------------------------------------------------------------------
! DiagModule
! -----------------------------------------------------------------------------
! $Log: DiagModule.dummy.f90,v $
! Revision 1.1  2002/06/25 10:52:10  drb
! Added dummy DiagModule which contains necessary variables to compile Conquest
! without needing to link to Scalapack and BLACS
!
! 25/06/2002 drb
!
! Revision 1.1  2002/05/31 13:53:00  drb
! Added DiagModule to Conquest source tree
! 31/05/2002 dave
!
! -----------------------------------------------------------------------------

!******************************************************************************
!
! This is a DUMMY module designed to allow those without BLACS and SCALAPACK to
! compile and run Conquest for order N only
!
!******************************************************************************

!!****h* Conquest/DiagModule *
!!NAME
!! DiagModule - DUMMY module
!!PURPOSE
!! Allows people to run Conquest O(N) only without Scalapack or BLACS
!!USES
!! datatypes, GenComms
!!AUTHOR
!! D.R.Bowler
!!CREATION DATE
!! 24/06/2002 
!!MODIFICATION HISTORY
!!
!!***
module DiagModule

  use datatypes

  implicit none

  save 

  integer :: nkp
  real(double), allocatable, dimension(:,:) :: kk
  real(double), allocatable, dimension(:) :: wtk
  ! 2007/08/13 dave changed this to be set by user
  real(double) :: kT
  ! Max number of iterations when searching for E_Fermi
  integer :: maxefermi

  logical :: diagon ! Do we diagonalise or use O(N) ?
  ! -------------------------------------------------------
  ! RCS ident string for object file id
  ! -------------------------------------------------------
  character(len=80), private :: RCSid = "$Id: DiagModule.dummy.f90,v 1.1 2002/06/25 10:52:10 drb Exp $"

contains

! -----------------------------------------------------------------------------
! Subroutine FindEvals **DUMMY**
! -----------------------------------------------------------------------------

!!****f* DiagModule/FindEvals *
!!
!!NAME 
!! FindEvals - returns an error and stops
!!USAGE
!! 
!!PURPOSE
!! Stop a user without SCALAPACK and BLACS trying to diagonalise
!!INPUTS
!! 
!!USES
!! datatypes
!!AUTHOR
!! D.R.Bowler
!!CREATION DATE
!! 24/06/2002
!!MODIFICATION HISTORY
!!
!!SOURCE
!!
  subroutine FindEvals(electrons)

    use datatypes
    use GenComms, ONLY: cq_abort

    implicit none

    ! Passed variables
    real(double) :: electrons

    write(*,*) 'ERROR: You are using the DUMMY diagonalisation module !'
    write(*,*) 'If you want to diagonalise, use the REAL DiagModule !'
    call cq_abort('FindEvals: No Scalapack or BLACS')
    return
  end subroutine FindEvals
!!***
end module DiagModule
